@font-face {
  font-family: 'Hussar';
  src: url(fonts/hussar/hussarbd-web.ttf);
}
@font-face {
  font-family: 'Recharge';
  src: url(fonts/recharge/recharge-bd.ttf);
}

@import url(https://fonts.googleapis.com/css?family=Open+Sans);

@mixin placeholder-color {
   ::-webkit-input-placeholder {
    /* WebKit, Blink, Edge */
    color: $light-gray;
  }
   :-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: $light-gray;
    opacity: 1;
  }
   ::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: $light-gray;
    opacity: 1;
  }
   :-ms-input-placeholder {
    /* Internet Explorer 10-11 */
    color: $light-gray;
  }
}

// .heading-font {
//   font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
//   text-transform: uppercase;
// }

.body-font {
  font-family: 'Open Sans', 'Roboto', Helvetica, Arial, sans-serif;
}

.heading-recharged {
  font-family: 'Recharge';
  // text-transform: lowercase;
  // text-transform: uppercase;
}


// @mixin border-radius($radius) {
//   -webkit-border-radius: $radius;
//      -moz-border-radius: $radius;
//       -ms-border-radius: $radius;
//           border-radius: $radius;
// }
// .box {
//   @include border-radius(10px);
// }


// center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// antialiasing mode font rendering

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
